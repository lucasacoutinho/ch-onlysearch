version: '3'

services:
  ch-onlysearch-server:
    container_name: ch-onlysearch-server
    image: nginx:alpine
    volumes:
      - ..:/var/www/html/app
      - ./nginx/:/etc/nginx/conf.d/
    ports:
      - '80:80'
    networks:
      - ch-onlysearch-network
    depends_on:
      - ch-onlysearch-api

  ch-onlysearch-api:
    container_name: ch-onlysearch-api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=localhost client_port=9000
    volumes:
      - ..:/var/www/html/app
    networks:
      - ch-onlysearch-network
    depends_on:
      - ch-onlysearch-database
      - ch-onlysearch-redis

  ch-onlysearch-database:
    container_name: ch-onlysearch-database
    image: 'postgres:17.4-bookworm'
    restart: unless-stopped
    tty: true
    environment:
      PGPASSWORD: onlysearch
      POSTGRES_DB: onlysearch
      POSTGRES_USER: onlysearch
      POSTGRES_PASSWORD: onlysearch
    ports:
      - '5432:5432'
    volumes:
      - ch-onlysearch-data:/var/lib/postgresql/data
      - ../.docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql
    healthcheck:
        test: ["CMD", "pg_isready", "-q", "-d", "onlysearch", "-U", "onlysearch"]
        retries: 3
        timeout: 5s
    networks:
      - ch-onlysearch-network

  ch-onlysearch-redis:
    container_name: ch-onlysearch-redis
    image: redis:alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    networks:
      - ch-onlysearch-network

networks:
  ch-onlysearch-network:
    driver: bridge

volumes:
  ch-onlysearch-data:
